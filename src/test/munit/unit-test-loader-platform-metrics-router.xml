<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<munit:config name="unit-test-loader-platform-metrics-router.xml" />
	<munit:before-test name="unit-test-loader-platform-metrics-router-before-test" doc:id="0e47f5bb-bc98-4765-998e-ad61d966cee5" >
		<set-variable value="#[MunitTools::getResourceAsString('examples/responses/loaders/response-loader-payload-example.json')]" doc:name="Set Expected Response Payload" doc:id="2b49e3ed-a93a-4198-9fe4-e19fddeabd9e" variableName="expectedResponse" mimeType="application/json" />
		<munit-tools:mock-when doc:name="Mock when POST login request" doc:id="6eb7a22b-911e-4dbb-8b76-644387bebcbe"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Post Login Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/coreservices/post-login-response.json')]" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get Hierarchy Request" doc:id="299ab0e3-6f43-460c-b989-78bc6efe3bfd"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Hierarchy Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/coreservices/get-hierarchy-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get Environments Request" doc:id="9fc6458e-eae6-4dd6-9102-6607bc055658"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Environments Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/coreservices/get-environments-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get Applications Request" doc:id="48956dbd-f792-417a-abac-741cf251a560"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Applications Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/cloudhub/get-applications-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get Assets Request" doc:id="bcdd26ab-ed8f-4f5b-8ee8-97e3cd001e85"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Assets" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/exchange/get-assets-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get Asset Dependencies Request"
				doc:id="d0dbf9b3-32cc-4364-9585-499a83cc0d2f" processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Asset Dependencies" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/exchange/get-asset-dependencies-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get APIs Request" doc:id="e44bdfdd-6abc-447a-9969-dc6a9020f69f"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get APIs Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/apimanager/get-apis-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get API Policies Request" doc:id="a72d4f0e-670d-4f9d-aa13-cefa90f97c31"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get API Policies Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/apimanager/get-api-policies-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get Members Request" doc:id="abf6ef1c-00f3-4eab-9e0e-e2bfc4e47dcc"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Members Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/coreservices/get-members-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get Usage Request" doc:id="0f816c78-a000-49ed-b441-d9f32f73f935"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Usage Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/coreservices/get-usage-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get Projects Request" doc:id="fa1074f5-a853-48ac-b1a4-3c0555b859db"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Projects Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/designcenter/get-projects-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get Initial API Clients Request" doc:id="65c4160a-ba6b-4363-a180-9e15d195057e"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Initial API Clients Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/apiplatform/get-api-clients-response.json')]" mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
					<munit-tools:variables >
						<munit-tools:variable key="apiClientsResponsePayload" value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/apiplatform/get-api-clients-response.json')]" mediaType="application/json" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get Additional API Clients Request" doc:id="265b5b7d-b5bc-40e6-8acd-4e5c4cbf3a03"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Additional API Clients Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/apiplatform/get-api-clients-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get API Manager Automated Policies Request"
				doc:id="6d98d5d5-c8fd-459e-956b-58ce66b006f8" processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Automated Policies Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/apimanager/get-automated-policies-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when ARM Get Deployments Request"
				doc:id="263415e2-5c03-49a1-bc42-d3f5cec335b0" processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Deployments Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/arm/get-deployments-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when ARM Get Deployment Details"
				doc:id="88dd4e0a-d081-4467-9e39-f314eb05b9bf" processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Deployment Details Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/arm/get-deployment-details-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when ARM Get Servers" doc:id="5d6b30b5-c4c3-428d-9144-73becc7a9e51"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Servers Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/arm/get-servers-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when ARM Get Clusters" doc:id="4e820bdf-b001-41fb-8945-a5c36274f650"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Clusters Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/arm/get-clusters-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when ARM Get Server Groups" doc:id="b52d0d4e-0138-4cb6-b872-1e7e2c7da916"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Server Groups Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/arm/get-server-groups-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when RTF Get Fabrics Request" doc:id="45ede1d7-97ca-4038-a034-b954514d6049"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Fabrics Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/runtimefabric/get-fabrics-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get Analytics Events" doc:id="0506d0de-03c9-4d1d-abf5-f828e37a3f4d"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Analytics Enriched Data Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/analytics/get-events-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get MQ Regions" doc:id="29b3a07d-d69c-40e6-b75e-862ae89e537c"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Regions Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/mq/get-regions-response.json')]" mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get MQ Destinations" doc:id="da6c2e90-bd65-4943-b978-976e678d3977" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Get Destinations Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/mq/get-destinations-response.json')]" mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get MQ Queue Stats" doc:id="6abc05b6-65cc-47a2-8de3-e9090d4a4df8" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Get Queue Stats Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/mq/get-queue-stats-response.json')]" mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get MQ Exchange Stats" doc:id="e58eb078-cedd-4fa0-8aa0-89faa43ea256" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Get Exchange Stats Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/mq/get-exchange-stats-response.json')]" mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get RoleGroups" doc:id="f25af967-625d-4faf-a0e5-94e5ac9e7899" processor="http:request" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Get RoleGroups Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/coreservices/get-role-groups.json')]" mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get OSv2 Request" doc:id="5a3ba492-2272-448a-b610-c57bbbb1b06f"
			processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get OSv2 Stats Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/osv2/get-osv2-stats-response.json')]" mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
	</munit:before-test>
	
	<munit:after-test name="unit-test-loader-platform-metrics-router-after-test" doc:id="d81ce1f3-91b8-41a7-89b1-e7606116f84a" >
		<remove-variable doc:name="Remove Expected Response Variable" doc:id="968e2d08-36c4-4a93-ac5f-088656c0d15d" variableName="expectedResponse"/>
		<remove-variable doc:name="Remove Expected CSV Response Variable" doc:id="451f12b2-fe86-4ea3-b768-94c7d1f88343" variableName="expectedCsvResponse"/>
		<remove-variable doc:name="Remove RExpected JSON Response Variable" doc:id="9b75aa6e-0b8b-4931-8d7e-f7fd4a93bf1e" variableName="expectedJsonResponse"/>
	</munit:after-test>
	
	<munit:test name="loader-platform-metrics-router-am-test" doc:id="d9bbb6fa-c274-4175-b3d2-303a64f7024b" description="Test">
		<munit:execution >
			<ee:transform doc:name="Mock Attributes and Payload" doc:id="e1d38512-8504-495c-8ccd-7b4b1ce146bd" >
				<ee:message >
					<ee:set-payload resource="dw/mock-loader-strategy-payload-am.dwl" />
					<ee:set-attributes resource="dw/mock-call-attributes.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to post:\platform-metrics\load:application\json:api-config" doc:id="7fc11a37-43af-46d3-a46f-231b1b03b006" name="post:\platform-metrics\load:application\json:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="6c6a3cb3-518c-41fd-934f-e058e1289ce0" expression='#[payload]' is="#[MunitTools::equalTo(vars.expectedResponse)]" message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>
	
	<munit:test name="loader-platform-metrics-router-splunk-http-test" doc:id="54a65710-4191-45d2-ba1d-c9c7552e9a70" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when POST to Splunk" doc:id="da88cf20-3dbe-45c1-ab13-12267fad1734" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Splunk HTTP Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Mock Attributes and Payload" doc:id="122ee437-d5b9-4f81-89c7-c25d67883e99" >
				<ee:message >
					<ee:set-payload resource="dw/mock-loader-strategy-payload-splunk.dwl" />
					<ee:set-attributes resource="dw/mock-call-attributes.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to post:\platform-metrics\load:application\json:api-config" doc:id="2821023b-42ef-4be5-87be-81b6b2643a4e" name="post:\platform-metrics\load:application\json:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="9d88244c-7fbd-4a51-ae98-e725044e3d67" expression='#[payload]' is="#[MunitTools::equalTo(vars.expectedResponse)]" message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>
	
	<munit:test name="loader-platform-metrics-router-splunk-https-test" doc:id="073d4ce6-aea2-4f47-b73b-dd28dbc2f516" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when POST to Splunk" doc:id="1f506996-dc4f-4eae-8982-1b04fb7dd502" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Splunk HTTPS Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Mock Attributes and Payload" doc:id="fd980f9f-599c-4846-8c0c-f3e388e18769" >
				<ee:message >
					<ee:set-payload resource="dw/mock-loader-strategy-payload-splunk-https.dwl" />
					<ee:set-attributes resource="dw/mock-call-attributes.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to post:\platform-metrics\load:application\json:api-config" doc:id="d4555c2d-c0cc-4971-8a06-f5616a3cf1fa" name="post:\platform-metrics\load:application\json:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="f0a60f4a-3630-482d-bc12-f16621b02623" expression='#[payload]' is="#[MunitTools::equalTo(vars.expectedResponse)]" message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>
	
	<munit:test name="loader-platform-metrics-router-elk-http-test" doc:id="536e271a-7db0-402e-b39b-13e8a68c7121" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when POST to ELK" doc:id="d56073d6-89c9-499b-9efb-882fe8d3c800" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Build ELK HTTP Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Mock Attributes and Payload" doc:id="4ac9634e-1a09-4799-a010-41210654fd00" >
				<ee:message >
					<ee:set-payload resource="dw/mock-loader-strategy-payload-elk.dwl" />
					<ee:set-attributes resource="dw/mock-call-attributes.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to post:\platform-metrics\load:application\json:api-config" doc:id="3cd861c3-99f5-43e5-8eac-38f1304e0ef6" name="post:\platform-metrics\load:application\json:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="843348bb-47d3-4da8-8735-5a60eaa41ae6" expression='#[payload]' is="#[MunitTools::equalTo(vars.expectedResponse)]" message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>

	<munit:test name="loader-platform-metrics-router-tableau-file-test" doc:id="a58c95f4-9547-4fe6-9052-15a13c48d641" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when Writing a File" doc:id="9e410f53-3916-4d23-86eb-60f90c3756ae" processor="file:write">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Write" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Mock Attributes and Payload" doc:id="58932fe0-e49d-4087-9fa1-c7eb83d0c0bc" >
				<ee:message >
					<ee:set-payload resource="dw/mock-loader-strategy-payload-tableau.dwl" />
					<ee:set-attributes resource="dw/mock-call-attributes.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to post:\platform-metrics\load:application\json:api-config" doc:id="e1ae5bd9-983e-4933-b278-1d26684e2783" name="post:\platform-metrics\load:application\json:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert correct file write path" doc:id="aa28022e-012d-4917-8888-d54be03e44c7" is="#[MunitTools::startsWith('/tmp/test')]" expression="#[vars.writePath]"/>
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="a878b43b-b192-414e-9142-fb755d3e8c74" expression='#[payload]' is="#[MunitTools::equalTo(vars.expectedResponse)]" message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>
	
	<munit:test name="loader-platform-metrics-router-logger-test" doc:id="130d9023-62dc-434f-a58c-fb3af2a2cfce" description="Test">
		<munit:execution >
			<ee:transform doc:name="Mock Attributes and Payload" doc:id="2a9c8c89-159f-4b2b-9e38-02b9be5de2d2" >
				<ee:message >
					<ee:set-payload resource="dw/mock-loader-strategy-payload-logger.dwl" />
					<ee:set-attributes resource="dw/mock-call-attributes.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to post:\platform-metrics\load:application\json:api-config" doc:id="457877c3-9ba0-4bc9-a01d-c1742de6042e" name="post:\platform-metrics\load:application\json:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="8d909d8c-0e76-41af-9868-d29546e153f5" expression='#[payload]' is="#[MunitTools::equalTo(vars.expectedResponse)]" message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>
	
	<munit:test name="z-loader-platform-metrics-router-csv-test" doc:id="85c18db9-6f44-4c58-9284-566287b469f2" description="Test">
		<munit:execution >
			<set-variable value="#[MunitTools::getResourceAsString('examples/responses/loaders/response-loader-csv-payload-example.csv')]" doc:name="Set Expected Response Payload" doc:id="386e7034-1f0c-4e11-86ea-4fc2a7c6cdfa" variableName="expectedCsvResponse" mimeType="application/csv"/>
			<ee:transform doc:name="Mock Attributes and Payload" doc:id="b790b880-e821-469a-b7d3-d1a2810c18d8" >
				<ee:message >
					<ee:set-payload resource="dw/mock-loader-strategy-payload-csv.dwl" />
					<ee:set-attributes resource="dw/mock-call-attributes.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to post:\platform-metrics\load:application\json:api-config" doc:id="3e3ea9b2-5cfc-421d-aafb-6236b6117af2" name="post:\platform-metrics\load:application\json:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="a906bf55-616a-4015-bc48-ba7b5a48563b" expression='#[payload map ($ - "date")]' is='#[MunitTools::equalTo(vars.expectedCsvResponse map ($ - "date"))]' message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>
	
	<munit:test name="loader-platform-metrics-router-json-canonical-test" doc:id="0cddf74b-8dcd-43a9-a967-37866494b2ad" description="Test">
		<munit:execution >
			<set-variable value="#[MunitTools::getResourceAsString('examples/responses/loaders/response-loader-json-payload-example.json')]" doc:name="Set Expected Response Payload" doc:id="af00d9a6-1541-4703-993c-08b0e27e6e55" variableName="expectedJsonResponse" mimeType="application/json"/>
			<ee:transform doc:name="Mock Attributes and Payload" doc:id="20fee043-c311-4b89-8664-b22130deceb3" >
				<ee:message >
					<ee:set-payload resource="dw/mock-loader-strategy-payload-json.dwl" />
					<ee:set-attributes resource="dw/mock-call-attributes.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to post:\platform-metrics\load:application\json:api-config" doc:id="d553356e-73a1-4182-9d94-c6450871aea2" name="post:\platform-metrics\load:application\json:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="308936d6-f3e4-4801-b79f-1bac9c934cd0" expression='#[payload map ($ - "date")]' is='#[MunitTools::equalTo(vars.expectedJsonResponse map ($ - "date"))]' message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>
	
	<munit:test name="loader-platform-metrics-router-mongodb-test" doc:id="42305173-6a14-4b18-b956-e2c0174959b3" description="Test" expectedErrorType="MULE:ROUTING">
		<munit:execution >
			<ee:transform doc:name="Mock Attributes and Payload" doc:id="926730b1-5d2a-4d2c-9449-f0572f98a576" >
				<ee:message >
					<ee:set-payload resource="dw/mock-loader-strategy-payload-mongodb.dwl" />
					<ee:set-attributes resource="dw/mock-call-attributes.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to post:\platform-metrics\load:application\json:api-config" doc:id="ffab454f-41b3-486e-a011-4b633ff507dc" name="post:\platform-metrics\load:application\json:api-config"/>
		</munit:execution>
	</munit:test>
	<munit:test name="loader-platform-metrics-router-sfdc-test" doc:id="89285ac9-7759-432d-8c0b-6746709f3195" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="9d5d15d1-f6ac-491b-ab83-7bda2abd301f" processor="salesforce-analytics:upload-external-data-into-new-data-set-and-start-processing">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Upload external data into new data set and start processing" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="Salesforce_Analytics_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Mock Attributes and Payload" doc:id="aff4c922-a764-4953-9722-ae8827d80eab" >
				<ee:message >
					<ee:set-payload resource="dw/mock-loader-strategy-payload-sfdc.dwl" />
					<ee:set-attributes resource="dw/mock-call-attributes.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to post:\platform-metrics\load:application\json:api-config" doc:id="6be87c2a-61d6-4fab-b659-8025c680d210" name="post:\platform-metrics\load:application\json:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="3d8a73be-5e39-4d1e-af99-51ec7d0cc228" expression='#[payload]' is="#[MunitTools::equalTo(vars.expectedResponse)]" message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>
</mule>
