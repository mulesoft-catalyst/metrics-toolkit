<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<munit:config name="unit-test-loader-sdlc-router.xml" />
	<munit:before-test name="unit-test-loader-sdlc-router-before-test" doc:id="ec3377a0-dbd0-4e79-9c93-b53b17bab7f6" >
		<set-variable value="#[MunitTools::getResourceAsString('examples/responses/response-post-sdlc-metrics-not-implemented.json')]" doc:name="Set Expected Response Payload" doc:id="4834527b-8e75-48f6-a094-9633ea95ee69" variableName="expectedResponse" mimeType="application/json" />
		<munit-tools:mock-when doc:name="Mock when Aggregate SDLC Flow Reference" doc:id="0c299254-1318-4fda-bc32-1ddcff8925c1" processor="flow-ref">
			<munit-tools:with-attributes >
				<munit-tools:with-attribute whereValue="aggregator-sdlc-metrics-main-flow" attributeName="name" />
			</munit-tools:with-attributes>
			<munit-tools:then-return >
				<munit-tools:payload value="#[MunitTools::getResourceAsString('examples/responses/response-get-sdlc-metrics.json')]" />
			</munit-tools:then-return>
		</munit-tools:mock-when>
	</munit:before-test>
	
	<munit:after-test name="unit-test-loader-sdlc-router-after-test" doc:id="a4b445ed-348d-4c40-8db3-8a7c10fa02ff" >
		<remove-variable doc:name="Remove Expected Response Variable" doc:id="acf8ef7c-b7ed-4e55-95ef-147d1ae428b7" variableName="expectedResponse"/>
	</munit:after-test>
	
	<munit:test name="loader-sdlc-router-am-test" doc:id="080daaf3-4b38-4a19-b825-be2e7307feb8" description="Test">
		<munit:execution >
			<ee:transform doc:name="Mock Payload" doc:id="5c997b35-3f1f-49ed-81fb-21ab57fd0492" >
				<ee:message >
					<ee:set-payload resource="dw/mock-loader-strategy-payload-am.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to post:\sdlc-metrics\load:api-config" doc:id="e93b7267-c275-46c2-aad4-73fed5a37fa4" name="post:\sdlc-metrics\load:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="f2ed5b29-3fbb-4727-beba-c77afde83147" expression='#[payload]' is='#[MunitTools::equalTo(vars.expectedResponse)]' message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>
	
	<munit:test name="loader-sdlc-router-splunk-http-test" doc:id="481ecb07-4dc0-4ed7-a9c6-89cf83fe6e36" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when POST to Splunk" doc:id="ecf2128c-810e-413e-9dc8-2c6aca16cbf5" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Splunk HTTP Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Mock Payload" doc:id="91a7130f-2316-4bac-b443-0060d541562e" >
				<ee:message >
					<ee:set-payload resource="dw/mock-loader-strategy-payload-splunk.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to post:\sdlc-metrics\load:api-config" doc:id="3bc789ce-31f4-4961-aff6-8c9afe4c77fb" name="post:\sdlc-metrics\load:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="d0bcb808-ebd0-4b32-a599-6bf00a2a0a54" expression='#[payload]' is='#[MunitTools::equalTo(vars.expectedResponse)]' message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>
	
	<munit:test name="loader-sdlc-router-splunk-https-test" doc:id="3bf4d9f6-0288-416b-a904-d080c50af3db" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when POST to Splunk" doc:id="34ac383f-b6ba-48ff-881d-0776b673b40e" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Splunk HTTPS Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Mock Payload" doc:id="929fec71-daf6-4a99-a09f-7e2633484dcc" >
				<ee:message >
					<ee:set-payload resource="dw/mock-loader-strategy-payload-splunk-https.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to post:\sdlc-metrics\load:api-config" doc:id="9011c624-e50f-4442-a62f-43148380ad48" name="post:\sdlc-metrics\load:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="bc162980-9851-458b-9d00-24b756ade97d" expression='#[payload]' is='#[MunitTools::equalTo(vars.expectedResponse)]' message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>
	
	<munit:test name="loader-sdlc-router-elk-http-test" doc:id="2a2fa403-382d-49c7-9764-59a89573a02a" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when POST to ELK" doc:id="86062d43-09d4-4934-86a0-c68eba3cade3" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Build ELK HTTP Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Mock Payload" doc:id="64c9193a-2156-4941-a3bd-504aff4f6162" >
				<ee:message >
					<ee:set-payload resource="dw/mock-loader-strategy-payload-elk.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to post:\sdlc-metrics\load:api-config" doc:id="d16184c0-89a4-4588-8273-97e38535c092" name="post:\sdlc-metrics\load:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="d0f2593f-d3ee-4c2d-9e74-0946f7b3406a" expression='#[payload]' is='#[MunitTools::equalTo(vars.expectedResponse)]' message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>

	<munit:test name="loader-sdlc-router-tableau-file-test" doc:id="37a29861-9c35-4871-a5e6-17a9a1043110" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when Writing a File" doc:id="aae9e923-f2e5-4c6c-a41e-fdfabcf63f3f" processor="file:write">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Write" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Mock Payload" doc:id="b2eb81c9-e2de-4fc8-a31d-163fe2b0a3b3" >
				<ee:message >
					<ee:set-payload resource="dw/mock-loader-strategy-payload-tableau.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to post:\sdlc-metrics\load:api-config" doc:id="b92eaa97-8b5c-4649-bc5a-cbaab2b75048" name="post:\sdlc-metrics\load:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="9eff5880-49f8-4d4e-9cca-703d8262a51d" expression='#[payload]' is='#[MunitTools::equalTo(vars.expectedResponse)]' message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>
	
	<munit:test name="loader-sdlc-router-logger-test" doc:id="c2a19c6d-8951-4201-96ac-03c53168a398" description="Test">
		<munit:execution >
			<ee:transform doc:name="Mock Payload" doc:id="b531934a-87a0-4f85-b3b6-c42d3b074370" >
				<ee:message >
					<ee:set-payload resource="dw/mock-loader-strategy-payload-logger.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to post:\sdlc-metrics\load:api-config" doc:id="e3f8d868-0aff-46a3-9592-f1bddb0c6ede" name="post:\sdlc-metrics\load:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="4cdfa84b-22bc-4215-97b0-179f947ac049" expression='#[payload]' is='#[MunitTools::equalTo(vars.expectedResponse)]' message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>
	
	<munit:test name="loader-sdlc-router-csv-test" doc:id="73e4478f-5c91-4773-baf3-77b8f1ea40ad" description="Test">
		<munit:execution >
			<ee:transform doc:name="Mock Payload" doc:id="e22cbf2e-bb07-4b01-8647-b1e8103aad46" >
				<ee:message >
					<ee:set-payload resource="dw/mock-loader-strategy-payload-csv.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to post:\sdlc-metrics\load:api-config" doc:id="04553740-21d5-4527-a191-967070e916a7" name="post:\sdlc-metrics\load:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="653b70de-6290-484f-a571-10f0477a4a2f" expression='#[payload]' is='#[MunitTools::equalTo(vars.expectedResponse)]' message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>
	
	<munit:test name="loader-sdlc-router-json-canonical-test" doc:id="a8a46627-345b-4d2e-bf4b-dc5236176bd9" description="Test">
		<munit:execution >
			<ee:transform doc:name="Mock Payload" doc:id="530a6f3c-4b48-49c0-b271-867ec7f1067b" >
				<ee:message >
					<ee:set-payload resource="dw/mock-loader-strategy-payload-json.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to post:\sdlc-metrics\load:api-config" doc:id="3b9c510e-266e-4516-9c1f-5d2c59e81ff1" name="post:\sdlc-metrics\load:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="a6b8b3f1-aa58-4984-a58b-47ef54dff2aa" expression='#[payload]' is='#[MunitTools::equalTo(vars.expectedResponse)]' message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>
	
	<munit:test name="loader-sdlc-router-mongodb-test" doc:id="fb6d19f0-bdb2-4148-ba76-c1f78af4d2d8" description="Test">
		<munit:execution >
			<ee:transform doc:name="Mock Payload" doc:id="737426a3-cb57-4241-b5fa-5e3263e7b1a0" >
				<ee:message >
					<ee:set-payload resource="dw/mock-loader-strategy-payload-mongodb.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to post:\sdlc-metrics\load:api-config" doc:id="1df10218-7982-428e-b7c7-885c06209830" name="post:\sdlc-metrics\load:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="936c130f-9f29-4e1f-b8b8-bb4d8b369245" expression='#[payload]' is='#[MunitTools::equalTo(vars.expectedResponse)]' message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>
</mule>
