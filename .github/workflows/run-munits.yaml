name: Run Munit Tests
on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - develop
      - main
  push:
    branches:
      - pipeline

jobs:
  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: adopt
          architecture: x64
          cache: maven
      - name: Generate settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          repositories: |
            [
              {
                "id": "mulesoft-ee",
                "name": "MuleSoft EE",
                "url": "https://repository.mulesoft.org/nexus-ee/content/repositories/releases-ee",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true"
                }
              }
            ]
          servers: |
            [
              {
                "id": "mulesoft-ee",
                "username": "${{ secrets.EE_USER }}",
                "password": "${{ secrets.EE_PASS }}"
              }
            ]
      - name: Prepare configuration
        run: cp $GITHUB_WORKSPACE/.github/app-dev.yaml $GITHUB_WORKSPACE/src/main/resources/properties/secure/app-dev.yaml
      - name: Run MUnit
        run: mvn -B clean test
      - name: Archive test results
        uses: actions/upload-artifact@v3
        with:
          name: surefire-reports
          path: target/surefire-reports/
      - name: Archive test coverage report
        uses: actions/upload-artifact@v3
        with:
          name: munit-coverage-report
          path: target/site/munit/coverage/munit-coverage.json
  report-coverage:
    name: Report Coverage
    runs-on: ubuntu-latest
    needs: run-tests
    if: github.event.pull_request
    steps:
      - uses: actions/checkout@v3
      - name: Get test coverage report
        uses: actions/download-artifact@v3
        with:
          name: munit-coverage-report
      - run: |
          coverage=$(cat munit-coverage-report | jq -r '.coverage' | xargs printf '%.3f%%\n')
          gh pr comment ${{ github.event.pr.number }} --body "Code coverage reported as $coverage"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
